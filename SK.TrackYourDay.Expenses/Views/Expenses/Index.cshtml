@using SK.TrackYourDay.Expenses.Data.Paging;
@model PaginatedList<SK.TrackYourDay.Expenses.Models.ViewModels.ExpenseVM>
@{
    ViewData["Title"] = "Index";
}

<style>
    .current-page {
        font-weight: bold;
        border: 1px solid #ccc;
        padding: 5px 10px;
        border-radius: 5px;
    }
</style>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h3 class="text-primary">Expenses List</h3>
        </div>
        <div class="col-6 text-right">
            <a asp-controller="Expenses" asp-action="Create" class="btn btn-primary">Create new expense</a>
        </div>
    </div>
    <br />

    <div class="accordion margin-b-1" id="accordionExample">
        <div class="card w-100">
            <div class="card-header" id="headingOne">
                <h4 class="mb-0">
                    <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                        Expand/Collapse Filters
                    </button>
                </h4>
            </div>
            <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                <div class="card-body">
                    @Html.Partial("_FilterExpenses", new SK.TrackYourDay.Expenses.Models.ViewModels.FilterVM())
                </div>
            </div>
        </div>
    </div>

    @if (Model.Count() > 0)
    {
        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th class="text-center align-middle">
                        Expense Name
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell text-center align-middle">
                        Description
                    </th>
                    <th class="text-center align-middle">
                        Amount
                    </th>
                    <th class="text-center align-middle">
                        Date
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell text-center align-middle">
                        Category
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell align-middle">
                        Payment Method
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell align-middle">
                        Created By
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell align-middle">
                        Irregular Payment
                    </th>
                    <th class="text-center align-middle">
                        Changes
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var expense in Model)
                {
                    <tr>
                        <td width="20%" class="text-center align-middle">@expense.ExpenseName</td>
                        <td width="20%" scope="col" class="d-none d-sm-table-cell text-center align-middle">@expense.Description</td>
                        <td width="10%" class="text-center align-middle">@expense.Amount</td>
                        <td width="8%" class="text-center align-middle">@expense.Date.ToString("dd/MM/yy")</td>
                        <td width="4%" scope="col" class="d-none d-sm-table-cell text-center align-middle">@expense.ExpenseCategory</td>
                        <td width="4%" scope="col" class="d-none d-sm-table-cell text-center align-middle">@expense.PaymentMethod</td>
                        <td width="4%" scope="col" class="d-none d-sm-table-cell text-center align-middle">@expense.UserName</td>
                        <td width="4%" scope="col" class="d-none d-sm-table-cell text-center align-middle"><input asp-for="@expense.IrregularPayment" disabled /></td>
                        <td width="10%" class="align-middle">
                            <div class="w-100 btn-group" role="group">
                                <a asp-controller="Expenses" asp-action="Update" asp-route-Id="@expense.Id" class="btn-sm btn-secondary mx-1">Update</a>
                                <a asp-controller="Expenses" asp-action="Delete" asp-route-Id="@expense.Id" class="btn-sm btn-danger mx-1">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No expenses</p>
    }

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-default @prevDisabled">Previous</a>

    <!-- Render page number buttons -->
    @{
        int maxPageButtons = 3;

        int? startPage = Model.PageIndex - maxPageButtons / 2;
        if (startPage < 1)
        {
            startPage = 1;
        }

        int? endPage = startPage + maxPageButtons - 1;
        if (endPage > Model.TotalPages)
        {
            endPage = Model.TotalPages;
            startPage = endPage - maxPageButtons + 1;
            if (startPage < 1)
            {
                startPage = 1;
            }
        }
    }

    @if (startPage > 1)
    {
        <a asp-action="Index" asp-route-pageNumber="1" class="btn btn-default">1</a>
        <span class="btn btn-default disabled">...</span>
    }

    @for (int? pageNumber = startPage; pageNumber <= endPage; pageNumber++)
    {
        string activeClass = pageNumber == Model.PageIndex ? "active" : "";
        <a asp-action="Index" asp-route-pageNumber="@pageNumber" class="btn btn-default @activeClass @((pageNumber == Model.PageIndex) ? "current-page" : "")">@pageNumber</a>
    }

    @if (endPage < Model.TotalPages)
    {
        <span class="btn btn-default disabled">...</span>
        <a asp-action="Index" asp-route-pageNumber="@Model.TotalPages" class="btn btn-default">@Model.TotalPages</a>
    }

    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-default @nextDisabled">Next</a>


    @if (@ViewBag.TotalAmount > 0)
    {
        <div class="row pt-4">
            <div class="col-6">
                <h3 class="text-primary">Total Amount</h3>
            </div>
            <div class="col-4 text-right">
                <h3 class="text-primary">@ViewBag.TotalAmount</h3>
            </div>
        </div>
    }

</div>
